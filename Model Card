Overview

Binary income classification using the Adult/Census dataset. The model predicts whether an individual’s income exceeds a threshold (e.g., >50K) from demographic attributes. This project demonstrates an MLOps pipeline (training, testing, serving) and is not intended for high-stakes production use.

Data

Source: Adult/Census Income (local CSV under data/).

Target (LABEL): salary (mapped to 0/1 from strings like <=50K / >50K).

Features: Mixed numeric + categorical, e.g., age, fnlwgt, education, education-num, marital-status, occupation, relationship, race, sex, capital-gain, capital-loss, hours-per-week, native-country.

Split: 80/20 random split with seed 42.

Model

Algorithm: RandomForestClassifier (scikit-learn)

Key params: n_estimators=300, random_state=42, n_jobs=-1

Preprocessing: OneHotEncoder(handle_unknown="ignore") on object-dtype categoricals; numeric columns pass through unchanged.

Metrics (Test Set)

Precision: 0.7528

Recall: 0.6371

F1: 0.6902
Computed on the 20% hold-out set after training with the 80% split.

Sliced Performance

Per-slice precision/recall/F1 are reported in slice_output.txt for each categorical feature value (tiny slices skipped).
Use this to spot disparities between groups and consider mitigation if large gaps appear.

Ethical Considerations

Demographic attributes may encode historical bias; this model should not be used for real-world decisions about individuals without thorough fairness evaluation.

Review slice metrics for disparate performance across sensitive attributes; apply mitigation (data checks, different models, calibration, thresholding) as needed.

Limitations

Trained on a specific historical dataset; distribution shifts may degrade performance.

One-hot encoding expands dimensionality and may overfit on rare categories.

No probability calibration or policy-specific threshold tuning included.

Usage

Train & artifacts: python train_model.py → produces model/model.pkl, model/encoder.pkl, slice_output.txt
Serve API: uvicorn app.main:app --host 127.0.0.1 --port 8001
Predict (example JSON body) uses either underscore or hyphen names (the service normalizes keys).

Maintenance

Retrain periodically or when data drifts: python train_model.py.

Keep dependencies pinned in requirements.txt; run pytest -q on each change.

Monitor slice metrics over time; investigate widening gaps and retrain/adjust as needed.
