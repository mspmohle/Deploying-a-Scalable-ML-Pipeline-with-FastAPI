name: CI

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      PYTHONPATH: ${{ github.workspace }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Show Python & pip
        run: |
          set -x
          python -V
          pip -V

      - name: Install dependencies
        run: |
          set -euxo pipefail
          python -m pip install --upgrade pip setuptools wheel
          pip install -r requirements.txt
          python - <<'PY'
          import sys, pkgutil
          import pandas, sklearn, joblib
          print("pandas", pandas.__version__)
          print("sklearn", sklearn.__version__)
          print("joblib", joblib.__version__)
          PY

      - name: Ensure dataset
        run: |
          set -euxo pipefail
          mkdir -p data
          if [ ! -f data/census.csv ]; then
            curl -fsSL -o data/census.csv \
              https://raw.githubusercontent.com/udacity/nd0821-c3-starter-code/master/starter/data/census.csv
          fi
          wc -l data/census.csv
          head -1 data/census.csv

      - name: Train to generate artifacts
        run: |
          set -euxo pipefail
          python - <<'PY'
          import os, sys, pandas as pd
          print("CWD", os.getcwd())
          print("Has app/__init__:", os.path.exists("app/__init__.py"))
          print("Has train_model.py:", os.path.exists("train_model.py"))
          import app.model as m
          print("LABEL =", m.LABEL)
          PY
          python train_model.py
          ls -l model || true
          head -20 slice_output.txt || true

      - name: Upload training artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: training-artifacts
          path: |
            model/*.pkl
            slice_output.txt
          if-no-files-found: warn

      - name: Run tests
        run: |
          set -euxo pipefail
          pytest -q -k . --maxfail=1

      - name: Upload pytest cache (on failure)
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: pytest-cache
          path: |
            .pytest_cache
            .coverage
          if-no-files-found: ignore
